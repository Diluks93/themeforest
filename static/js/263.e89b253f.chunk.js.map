{"version":3,"file":"static/js/263.e89b253f.chunk.js","mappings":"iNAKO,MAAMA,GAAeC,EAAAA,EAAAA,GAAaC,EAAAA,IACnCC,GAASF,EAAAA,EAAAA,GAAaG,EAAAA,IACtBC,GAAQJ,EAAAA,EAAAA,GAAaK,EAAAA,IAEpB,SAASC,IACd,OACE,UAAC,KAAO,CAACC,aAAW,EAACC,KAAG,aACtB,SAACT,EAAY,CACXU,MAAM,eACNC,kBAAgB,EAChBC,KAAMC,EAAAA,GACNC,WAAY,EACZC,SAAU,OAEZ,SAACZ,EAAM,CACLO,MAAM,cACNC,kBAAkB,EAClBC,KAAMI,EAAAA,GACNF,WAAY,KAEd,SAACT,EAAK,CAACK,MAAM,WAAWC,kBAAgB,EAACC,KAAMK,EAAAA,GAAOH,WAAY,MAGxE,C,qEC1BO,MAAMI,EAAUC,EAAAA,GAAAA,GAEpB;;;aAGU,QAAC,MAAEC,GAAO,SAAKA,EAAMC,KAAK,EAAE;;;IAGrC,QAAC,OAAEC,GAAQ,SACXA,EACIC,EAAAA,EAAI;;UAGJA,EAAAA,EAAI;;SAEH;2MCZF,MAAMC,GAAkBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAiC;;IAEnE,QAAC,OAAEH,EAAM,MAAEF,GAAO,SAClBE,EACIC,EAAAA,EAAI;;qBAESH,EAAMM,MAAMC,UAAUC,SAAS;UAE5CL,EAAAA,EAAI;;4BAEgBH,EAAMM,MAAMC,UAAUC,SAAS;SAClD;EAGIC,EAAaV,EAAAA,GAAAA,GAAW;0BACXW;;YAEd,QAAC,MAAEV,GAAO,SAAKA,EAAMM,MAAMC,UAAUI,OAAO,EAAE;;;;EAM7CC,EAAOb,EAAAA,GAAAA,EAAU;;;;;;;YAOlB,QAAC,MAAEC,GAAO,SAAKA,EAAMa,OAAOC,OAAO;;EAIlCC,EAAWhB,EAAAA,GAAAA,EAAU;;;;;EAOrBiB,GAAoBjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAa;;;EAKxCC,EAAWnB,EAAAA,GAAAA,EAAU;;;;;IAK9B,QAAC,MAAEC,GAAO,SAAKA,EAAMa,OAAOM,KAAK;oCCrCtB,SAASC,IACtB,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,MAEvB,OACE,iCACE,SAAC,KAAO,CAACC,GAAIF,EAAW,UACtB,UAACjB,EAAe,YACd,SAAC,KAAU,CAACoB,MAAI,KAChB,SAAC,KAAS,CAACC,SAAS,YAAYnC,MAAO+B,UAG3C,SAAC,KAAO,WACN,SAACjB,EAAe,CAACsB,MAAI,WAClBC,EAAAA,GAAAA,KAAkBC,IACjB,mBAAC,KAAW,IAAKA,EAAMC,IAAKD,EAAKL,GAAIA,GAAIK,EAAKtC,eAIpD,UAAC,KAAO,CAACwC,gBAAc,EAACC,KAAG,aACzB,SAACtB,EAAU,KACX,SAACL,EAAe,CAACF,QAAM,YACrB,UAAC,IAAO,CAACA,QAAM,aACb,SAAC,KAAU,8BACX,SAACU,EAAI,UACFoB,EAAAA,GAAAA,KAAiB,CAAC,EAAeC,KAAO,IAAtB,GAAEV,EAAE,MAAEjC,GAAO,EAC9B,GAAI2C,EAAI,EACN,OACE,UAAClB,EAAQ,YACP,SAAC,KAAS,KACV,SAACG,EAAQ,UAAE5B,KACX,SAAC0B,EAAiB,uJAHLO,EAUnB,eAMV,SAAC,KAAO,CAACnC,aAAW,YAClB,SAAC,IAAY,CACXE,MAAM,eACNC,kBAAgB,EAChBC,KAAMC,EAAAA,GACNC,WAAY,EACZC,SAAU,UAKpB,C","sources":["pages/Home/Sections/CardsSection/index.tsx","pages/Home/styled.ts","pages/Solution/styled.ts","pages/Solution/index.tsx"],"sourcesContent":["import { Blog, PriceCard, TestimonialsCard, Section } from 'components';\r\nimport { blogs, prices, teamMembers } from 'constants/';\r\n\r\nimport { withControls } from 'HOCs';\r\n\r\nexport const Testimonials = withControls(TestimonialsCard);\r\nconst Prices = withControls(PriceCard);\r\nconst Blogs = withControls(Blog);\r\n\r\nexport function CardsSection() {\r\n  return (\r\n    <Section cardSection col>\r\n      <Testimonials\r\n        title=\"Testimonials\"\r\n        isVisibleButtons\r\n        data={teamMembers}\r\n        countCards={3}\r\n        duration={3000}\r\n      />\r\n      <Prices\r\n        title=\"Our pricing\"\r\n        isVisibleButtons={false}\r\n        data={prices}\r\n        countCards={4}\r\n      />\r\n      <Blogs title=\"Our blog\" isVisibleButtons data={blogs} countCards={3} />\r\n    </Section>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\n\nexport const Wrapper = styled.div<{\n  $align?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${({ theme }) => theme.gaps[8]}px;\n  flex: 1;\n\n  ${({ $align }) =>\n    $align\n      ? css`\n          align-items: flex-start;\n        `\n      : css`\n          align-items: baseline;\n        `};\n`;\n","import styled, { css } from 'styled-components';\r\n\r\nimport { Container, Description } from 'styles';\r\nimport dataAnalytics from 'static/images/data_analytics.webp';\r\n\r\nexport const ContainerStyled = styled(Container)<{ $align?: boolean }>`\r\n  flex: 1;\r\n  ${({ $align, theme }) =>\r\n    $align\r\n      ? css`\r\n          align-items: flex-start\r\n          padding: ${theme.sizes.container.paddings[2]}px 0;\r\n        `\r\n      : css`\r\n          align-items: center;\r\n          padding-bottom: ${theme.sizes.container.paddings[2]}px;\r\n        `}\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  background-image: url(${dataAnalytics});\r\n  background-repeat: no-repeat;\r\n  height: ${({ theme }) => theme.sizes.container.height[0]}px;\r\n  flex: 1;\r\n  background-position: right;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 30px;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  row-gap: 16px;\r\n  width: 540px;\r\n`;\r\n\r\nexport const DescriptionStyled = styled(Description)`\r\n  font-size: 16px;\r\n  width: 540px;\r\n`;\r\n\r\nexport const SubTitle = styled.h4`\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  letter-spacing: -0.015em;\r\n  ${({ theme }) => theme.colors.black}\r\n`;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { Section, BreadCrumb, MainTitle, CardService } from 'components';\r\nimport { solutionCards, teamMembers, serviceCards } from 'constants/';\r\nimport { Wrapper } from 'pages/Home/styled';\r\n\r\nimport {\r\n  ContainerStyled,\r\n  Background,\r\n  List,\r\n  ListItem,\r\n  DescriptionStyled,\r\n  SubTitle,\r\n} from './styled';\r\nimport { Testimonials } from 'pages/Home/Sections/CardsSection';\r\nimport { BlockTitle } from 'styles';\r\nimport { Checkmark } from 'static';\r\n\r\nexport default function ServicesPage() {\r\n  const { solutionId } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <Section id={solutionId}>\r\n        <ContainerStyled>\r\n          <BreadCrumb left />\r\n          <MainTitle subtitle=\"Solutions\" title={solutionId as string} />\r\n        </ContainerStyled>\r\n      </Section>\r\n      <Section>\r\n        <ContainerStyled $row>\r\n          {solutionCards.map(card => (\r\n            <CardService {...card} key={card.id} id={card.title} />\r\n          ))}\r\n        </ContainerStyled>\r\n      </Section>\r\n      <Section featureSection odd>\r\n        <Background />\r\n        <ContainerStyled $align>\r\n          <Wrapper $align>\r\n            <BlockTitle>Why choose us?</BlockTitle>\r\n            <List>\r\n              {serviceCards.map(({ id, title }, i) => {\r\n                if (i < 3) {\r\n                  return (\r\n                    <ListItem key={id}>\r\n                      <Checkmark />\r\n                      <SubTitle>{title}</SubTitle>\r\n                      <DescriptionStyled>\r\n                        At vero eos et accusamus et iusto odio dignissimos\r\n                        ducimus qui blanditiis praesentium voluptatum deleniti\r\n                        atque corrupti quos dolores.\r\n                      </DescriptionStyled>\r\n                    </ListItem>\r\n                  );\r\n                }\r\n              })}\r\n            </List>\r\n          </Wrapper>\r\n        </ContainerStyled>\r\n      </Section>\r\n      <Section cardSection>\r\n        <Testimonials\r\n          title=\"Testimonials\"\r\n          isVisibleButtons\r\n          data={teamMembers}\r\n          countCards={3}\r\n          duration={3000}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Testimonials","withControls","TestimonialsCard","Prices","PriceCard","Blogs","Blog","CardsSection","cardSection","col","title","isVisibleButtons","data","teamMembers","countCards","duration","prices","blogs","Wrapper","styled","theme","gaps","$align","css","ContainerStyled","Container","sizes","container","paddings","Background","dataAnalytics","height","List","colors","primary","ListItem","DescriptionStyled","Description","SubTitle","black","ServicesPage","solutionId","useParams","id","left","subtitle","$row","solutionCards","card","key","featureSection","odd","serviceCards","i"],"sourceRoot":""}