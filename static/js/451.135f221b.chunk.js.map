{"version":3,"file":"static/js/451.135f221b.chunk.js","mappings":"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","sources":["HOCs/withControlsHOC/styled.ts","HOCs/withControlsHOC/index.tsx","hooks/useCarousel.ts","HOCs/withValidationFormHOC/index.tsx","pages/Contacts/index.tsx","pages/Contacts/styled.ts","pages/Services/styled.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nimport { Container } from 'styles';\r\n\r\nexport const ContainerStyled = styled(Container)`\r\n  row-gap: ${({ theme }) => theme.gaps[17]}px;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nexport const CardsStyled = styled.div`\r\n  display: flex;\r\n  gap: ${({ theme }) => theme.gaps[8]}px;\r\n  transform: translateX(1140px);\r\n`;\r\n","import React, { ComponentType, useEffect, useState } from 'react';\r\n\r\nimport { useCarousel } from 'hooks/useCarousel';\r\nimport { Controls } from 'components';\r\n\r\nimport { CardProp, WithControlsProps } from './prop';\r\nimport { CardsStyled, ContainerStyled } from './styled';\r\n\r\nexport function withControls<T extends WithControlsProps>(\r\n  Component: ComponentType<CardProp>\r\n) {\r\n  return (hocProps: T) => {\r\n    const { handleLeftClick, handleRightClick, cards } = useCarousel(\r\n      hocProps.data\r\n    );\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const carouselInfiniteScroll = () => {\r\n      if (currentIndex === cards.length - 1) {\r\n        return setCurrentIndex(0);\r\n      }\r\n\r\n      return setCurrentIndex(currentIndex + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n      const intervalId = setInterval(carouselInfiniteScroll, 3000);\r\n\r\n      return () => clearInterval(intervalId);\r\n    });\r\n\r\n    return (\r\n      <ContainerStyled>\r\n        <Controls\r\n          {...hocProps}\r\n          handleLeftClick={handleLeftClick}\r\n          handleRightClick={handleRightClick}\r\n        />\r\n        <CardsStyled>\r\n          {cards.map((card, index) => (\r\n            <Component {...card} key={index} />\r\n          ))}\r\n        </CardsStyled>\r\n      </ContainerStyled>\r\n    );\r\n  };\r\n}\r\n","import { useState } from 'react';\n\nexport function useCarousel<T>(items: T[]) {\n  const [cards, setCards] = useState(items);\n\n  const handleRightClick = () => {\n    // const firstItem = cards.shift();\n    // if (firstItem) {\n    //   cards.push(firstItem);\n    // }\n    // setCards([...cards]);\n  };\n\n  const handleLeftClick = () => {\n    // const lastItem = cards.pop();\n    // if (lastItem) {\n    //   cards.unshift(lastItem);\n    // }\n    // setCards([...cards]);\n  };\n\n  return {\n    handleRightClick,\n    handleLeftClick,\n    cards,\n  };\n}\n","import React, { ComponentType, MouseEvent, useCallback, useState } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { FormProp } from './prop';\r\n\r\nconst contactFormSchema = object().shape({\r\n  email: string().email().required(),\r\n  name: string().required(),\r\n  theme: string(),\r\n  message: string().max(160).required(),\r\n});\r\n\r\nexport function withValidationForm<T extends Record<string, unknown>>(\r\n  Component: ComponentType<FormProp>\r\n) {\r\n  return (hocProps: T) => {\r\n    const [values, setValues] = useState({\r\n      email: '',\r\n      name: '',\r\n      theme: '',\r\n      message: '',\r\n    });\r\n\r\n    const [errorsInField, setErrors] = useState({\r\n      email: false,\r\n      name: false,\r\n      theme: false,\r\n      message: false,\r\n    });\r\n\r\n    const onFieldChange = useCallback((fieldName: string, value: string) => {\r\n      setValues(prev => ({\r\n        ...prev,\r\n        [fieldName]: value,\r\n      }));\r\n\r\n      setErrors({\r\n        email: false,\r\n        name: false,\r\n        theme: false,\r\n        message: false,\r\n      });\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n      async (event: MouseEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const isFormValid = await contactFormSchema.isValid(values, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        if (isFormValid) {\r\n          console.log('Form is legit');\r\n        } else {\r\n          contactFormSchema\r\n            .validate(values, { abortEarly: false })\r\n            .catch(err => {\r\n              const errors = err.inner.reduce(\r\n                (acc: Record<string, boolean>, error: { path: string }) => {\r\n                  return {\r\n                    ...acc,\r\n                    [error.path]: true,\r\n                  };\r\n                }\r\n              );\r\n\r\n              setErrors(errors);\r\n            });\r\n        }\r\n      },\r\n      [values]\r\n    );\r\n    return (\r\n      <Component\r\n        values={values}\r\n        errors={errorsInField}\r\n        onFieldChange={onFieldChange}\r\n        onSubmit={onSubmit}\r\n        {...hocProps}\r\n      />\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\n\nimport {\n  BreadCrumb,\n  ContactsEmail,\n  ContactsPhone,\n  ContactsAddress,\n  ContactUsForm,\n  MapboxMap,\n  Section,\n} from 'components';\nimport { withValidationForm } from 'HOCs';\nimport { ContainerStyled } from 'pages/Services/styled';\nimport { Container, Main, Mark } from 'styles';\nimport { Call, Location, Mail } from 'static';\n\nimport { Title, Labeling } from './styled';\n\nconst ContactForm = withValidationForm(ContactUsForm);\n\nexport default function ContactsPage() {\n  return (\n    <Main>\n      <Section id=\"contacts\" col>\n        <Container>\n          <BreadCrumb left />\n        </Container>\n        <Container $flex $align>\n          <Title>\n            How can we <Mark>help you?</Mark>\n          </Title>\n          <ContactForm />\n        </Container>\n        <ContainerStyled $flex $left>\n          <ContactsEmail grey flex>\n            <Labeling>\n              <Mail /> Email\n            </Labeling>\n          </ContactsEmail>\n          <ContactsPhone grey flex>\n            <Labeling>\n              <Call /> Phone\n            </Labeling>\n          </ContactsPhone>\n          <ContactsAddress grey flex>\n            <Labeling>\n              <Location /> Address\n            </Labeling>\n          </ContactsAddress>\n        </ContainerStyled>\n      </Section>\n      <MapboxMap />\n    </Main>\n  );\n}\n","import styled, { css } from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: ${({ theme }) => theme.fonts.sizes[10]}px;\n  line-height: ${({ theme }) => theme.fonts.heights[8]}px;\n  letter-spacing: ${({ theme }) => theme.fonts.spacings[1]}em;\n  color: ${({ theme }) => theme.colors.black};\n  width: ${({ theme }) => theme.sizes.title.width[0]}px;\n  font-weight: ${({ theme }) => theme.fonts.weights[4]};\n`;\n\nexport const Labeling = styled.span<{ $grey?: boolean }>`\n  font-family: ${({ theme }) => theme.fonts.families[0]};\n  font-size: ${({ theme }) => theme.fonts.sizes[1]}px;\n  line-height: ${({ theme }) => theme.fonts.heights[0]}px;\n\n  text-align: right;\n  letter-spacing: ${({ theme }) => theme.fonts.spacings[0]}em;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.gaps[4]}px;\n\n  ${({ $grey, theme }) =>\n    $grey\n      ? css`\n          color: ${theme.colors.grey};\n          font-weight: ${theme.fonts.weights[0]};\n          svg {\n            fill: ${theme.colors.grey};\n          }\n        `\n      : css`\n          color: ${theme.colors.black};\n          font-weight: ${theme.fonts.weights[2]};\n          svg {\n            fill: ${theme.colors.black};\n          }\n        `}\n`;\n","import styled from 'styled-components';\r\n\r\nimport { Container } from 'styles';\r\n\r\nexport const ContainerStyled = styled(Container)`\r\n  padding-bottom: ${({ theme }) => theme.sizes.container.paddings[2]}px;\r\n`;\r\n"],"names":["ContainerStyled","styled","Container","theme","gaps","CardsStyled","withControls","Component","hocProps","handleLeftClick","handleRightClick","cards","items","setCards","useState","useCarousel","data","currentIndex","setCurrentIndex","carouselInfiniteScroll","length","useEffect","intervalId","setInterval","clearInterval","map","card","index","key","contactFormSchema","object","shape","email","string","required","name","message","max","withValidationForm","values","setValues","errorsInField","setErrors","onFieldChange","useCallback","fieldName","value","prev","onSubmit","async","event","preventDefault","isValid","abortEarly","console","log","validate","catch","err","errors","inner","reduce","acc","error","path","ContactForm","ContactUsForm","ContactsPage","id","col","left","$flex","$align","$left","grey","flex","Title","fonts","sizes","heights","spacings","colors","black","title","width","weights","Labeling","families","$grey","css","container","paddings"],"sourceRoot":""}