{"version":3,"file":"static/js/451.706cdde4.chunk.js","mappings":"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","sources":["HOCs/withControlsHOC/styled.ts","HOCs/withControlsHOC/index.tsx","HOCs/withValidationFormHOC/index.tsx","pages/Contacts/index.tsx","pages/Contacts/styled.ts","pages/Services/styled.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nimport { Container } from 'styles';\r\n\r\nexport const ContainerStyled = styled(Container)`\r\n  row-gap: ${({ theme }) => theme.gaps[17]}px;\r\n`;\r\n\r\nexport const CardsStyled = styled.div<{ $transform?: number }>`\r\n  display: flex;\r\n  overflow-x: hidden;\r\n  width: inherit;\r\n  gap: ${({ theme }) => theme.gaps[8]}px;\r\n\r\n  > div {\r\n    transform: ${({ $transform }) => `translateX(-${$transform}%)`};\r\n  }\r\n`;\r\n","import React, {\r\n  ComponentType,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { Controls } from 'components';\r\n\r\nimport { CardProp, WithControlsProps } from './prop';\r\nimport { CardsStyled, ContainerStyled } from './styled';\r\nimport { ThemeContext } from 'styled-components';\r\n\r\nexport function withControls<T extends WithControlsProps>(\r\n  Component: ComponentType<CardProp>\r\n) {\r\n  return (hocProps: T) => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const cards = useRef<CardProp[]>(hocProps.data).current;\r\n    const node = useRef<HTMLDivElement>(null);\r\n    const shift = useRef(0);\r\n    const { gaps } = useContext(ThemeContext);\r\n    const gap = gaps[8];\r\n\r\n    const carouselInfiniteScroll = () => {\r\n      if (currentIndex === cards.length - hocProps.countCards) {\r\n        return setCurrentIndex(0);\r\n      }\r\n      return setCurrentIndex(currentIndex + 1);\r\n    };\r\n\r\n    const handleLeftClick = () => {\r\n      if (currentIndex === 0) {\r\n        return setCurrentIndex(cards.length - hocProps.countCards);\r\n      }\r\n      return setCurrentIndex(currentIndex - 1);\r\n    };\r\n\r\n    const handleRightClick = () => {\r\n      carouselInfiniteScroll();\r\n    };\r\n\r\n    useEffect(() => {\r\n      shift.current =\r\n        (gap * 100) / (node.current?.children[0].clientWidth || 1) + 100;\r\n    }, [gap]);\r\n\r\n    useEffect(() => {\r\n      const intervalId = setInterval(carouselInfiniteScroll, hocProps.duration);\r\n\r\n      return () => clearInterval(intervalId);\r\n    });\r\n\r\n    return (\r\n      <ContainerStyled>\r\n        <Controls\r\n          {...hocProps}\r\n          handleLeftClick={handleLeftClick}\r\n          handleRightClick={handleRightClick}\r\n          disabledControls={cards.length === hocProps.countCards}\r\n        />\r\n        <CardsStyled ref={node} $transform={currentIndex * shift.current}>\r\n          {cards.map((card, index) => (\r\n            <Component {...card} key={index} />\r\n          ))}\r\n        </CardsStyled>\r\n      </ContainerStyled>\r\n    );\r\n  };\r\n}\r\n","import React, { ComponentType, MouseEvent, useCallback, useState } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { FormProp } from './prop';\r\n\r\nconst contactFormSchema = object().shape({\r\n  email: string().email().required(),\r\n  name: string().required(),\r\n  theme: string(),\r\n  message: string().max(160).required(),\r\n});\r\n\r\nexport function withValidationForm<T extends Record<string, unknown>>(\r\n  Component: ComponentType<FormProp>\r\n) {\r\n  return (hocProps: T) => {\r\n    const [values, setValues] = useState({\r\n      email: '',\r\n      name: '',\r\n      theme: '',\r\n      message: '',\r\n    });\r\n\r\n    const [errorsInField, setErrors] = useState({\r\n      email: false,\r\n      name: false,\r\n      theme: false,\r\n      message: false,\r\n    });\r\n\r\n    const onFieldChange = useCallback((fieldName: string, value: string) => {\r\n      setValues(prev => ({\r\n        ...prev,\r\n        [fieldName]: value,\r\n      }));\r\n\r\n      setErrors({\r\n        email: false,\r\n        name: false,\r\n        theme: false,\r\n        message: false,\r\n      });\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(\r\n      async (event: MouseEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const isFormValid = await contactFormSchema.isValid(values, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        if (isFormValid) {\r\n          console.log('Form is legit');\r\n        } else {\r\n          contactFormSchema\r\n            .validate(values, { abortEarly: false })\r\n            .catch(err => {\r\n              const errors = err.inner.reduce(\r\n                (acc: Record<string, boolean>, error: { path: string }) => {\r\n                  return {\r\n                    ...acc,\r\n                    [error.path]: true,\r\n                  };\r\n                }\r\n              );\r\n\r\n              setErrors(errors);\r\n            });\r\n        }\r\n      },\r\n      [values]\r\n    );\r\n    return (\r\n      <Component\r\n        values={values}\r\n        errors={errorsInField}\r\n        onFieldChange={onFieldChange}\r\n        onSubmit={onSubmit}\r\n        {...hocProps}\r\n      />\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\n\nimport {\n  BreadCrumb,\n  ContactsEmail,\n  ContactsPhone,\n  ContactsAddress,\n  ContactUsForm,\n  MapboxMap,\n  Section,\n} from 'components';\nimport { withValidationForm } from 'HOCs';\nimport { ContainerStyled } from 'pages/Services/styled';\nimport { Container, Mark } from 'styles';\nimport { Call, Location, Mail } from 'static';\n\nimport { Title, Labeling } from './styled';\n\nconst ContactForm = withValidationForm(ContactUsForm);\n\nexport default function ContactsPage() {\n  return (\n    <>\n      <Section id=\"contacts\" col>\n        <Container>\n          <BreadCrumb left />\n        </Container>\n        <Container $flex $align>\n          <Title>\n            How can we <Mark>help you?</Mark>\n          </Title>\n          <ContactForm />\n        </Container>\n        <ContainerStyled $flex $left>\n          <ContactsEmail grey flex>\n            <Labeling>\n              <Mail /> Email\n            </Labeling>\n          </ContactsEmail>\n          <ContactsPhone grey flex>\n            <Labeling>\n              <Call /> Phone\n            </Labeling>\n          </ContactsPhone>\n          <ContactsAddress grey flex>\n            <Labeling>\n              <Location /> Address\n            </Labeling>\n          </ContactsAddress>\n        </ContainerStyled>\n      </Section>\n      <MapboxMap />\n    </>\n  );\n}\n","import styled, { css } from 'styled-components';\n\nexport const Title = styled.h2`\n  font-size: ${({ theme }) => theme.fonts.sizes[10]}px;\n  line-height: ${({ theme }) => theme.fonts.heights[8]}px;\n  letter-spacing: ${({ theme }) => theme.fonts.spacings[1]}em;\n  color: ${({ theme }) => theme.colors.black};\n  width: ${({ theme }) => theme.sizes.title.width[0]}px;\n  font-weight: ${({ theme }) => theme.fonts.weights[4]};\n`;\n\nexport const Labeling = styled.span<{ $grey?: boolean }>`\n  font-family: ${({ theme }) => theme.fonts.families[0]};\n  font-size: ${({ theme }) => theme.fonts.sizes[1]}px;\n  line-height: ${({ theme }) => theme.fonts.heights[0]}px;\n\n  text-align: right;\n  letter-spacing: ${({ theme }) => theme.fonts.spacings[0]}em;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.gaps[4]}px;\n\n  ${({ $grey, theme }) =>\n    $grey\n      ? css`\n          color: ${theme.colors.grey};\n          font-weight: ${theme.fonts.weights[0]};\n          svg {\n            fill: ${theme.colors.grey};\n          }\n        `\n      : css`\n          color: ${theme.colors.black};\n          font-weight: ${theme.fonts.weights[2]};\n          svg {\n            fill: ${theme.colors.black};\n          }\n        `}\n`;\n","import styled from 'styled-components';\r\n\r\nimport { Container } from 'styles';\r\n\r\nexport const ContainerStyled = styled(Container)`\r\n  padding-bottom: ${({ theme }) => theme.sizes.container.paddings[2]}px;\r\n`;\r\n"],"names":["ContainerStyled","styled","Container","theme","gaps","CardsStyled","$transform","withControls","Component","hocProps","currentIndex","setCurrentIndex","useState","cards","useRef","data","current","node","shift","useContext","ThemeContext","gap","carouselInfiniteScroll","length","countCards","useEffect","children","clientWidth","intervalId","setInterval","duration","clearInterval","handleLeftClick","handleRightClick","disabledControls","ref","map","card","index","key","contactFormSchema","object","shape","email","string","required","name","message","max","withValidationForm","values","setValues","errorsInField","setErrors","onFieldChange","useCallback","fieldName","value","prev","onSubmit","async","event","preventDefault","isValid","abortEarly","console","log","validate","catch","err","errors","inner","reduce","acc","error","path","ContactForm","ContactUsForm","ContactsPage","id","col","left","$flex","$align","$left","grey","flex","Title","fonts","sizes","heights","spacings","colors","black","title","width","weights","Labeling","families","$grey","css","container","paddings"],"sourceRoot":""}